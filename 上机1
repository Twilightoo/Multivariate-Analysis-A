#1.16
bank0<-read.table("D:/R-3.3.2/JohnsonWichern Data sets/T1-8.DAT")
m<-as.matrix(bank0)
n<-25
x<-apply(m,2,mean)
Sn<-(n-1)/n*cov(m)
R<-cor(m)
#运行结果： 
#x
#     V1      V2      V3      V4      V5      V6 
#0.84380 0.81832 1.79268 1.73484 0.70440 0.69384 
#Sn
#            V1          V2         V3         V4          V5          V6
#V1 0.012481520 0.009963304 0.02145598 0.01928225 0.008755880 0.007639528
#V2 0.009963304 0.010961178 0.01779378 0.02025553 0.008188592 0.008552171
#V3 0.021455976 0.017793782 0.07714294 0.06410515 0.016163448 0.012333149
#V4 0.019282248 0.020255531 0.06410515 0.06670509 0.017026064 0.016121854
#V5 0.008755880 0.008188592 0.01616345 0.01702606 0.011105680 0.007748304
#V6 0.007639528 0.008552171 0.01233315 0.01612185 0.007748304 0.010175174
#R
#          V1        V2        V3        V4        V5        V6
#V1 1.0000000 0.8518067 0.6914590 0.6682584 0.7436926 0.6778941
#V2 0.8518067 1.0000000 0.6119157 0.7490926 0.7421780 0.8097983
#V3 0.6914590 0.6119157 1.0000000 0.8936456 0.5522215 0.4402050
#V4 0.6682584 0.7490926 0.8936456 1.0000000 0.6255502 0.6188203
#V5 0.7436926 0.7421780 0.5522215 0.6255502 1.0000000 0.7288919
#V6 0.6778941 0.8097983 0.4402050 0.6188203 0.7288919 1.0000000
#R的非对角元素的值不接近于1，说明两两之间的相关性不强。

#1.18
bank0<-read.table("D:/R-3.3.2/JohnsonWichern Data sets/T1-9.DAT",sep="\t")
m1<-as.matrix(bank0[,-1])
n<-54
x1<-apply(m1,2,mean)
Sn1<-(n-1)/n*cov(m1)
R1<-cor(m1)
m2<-m1
m2[,1]<-100/m1[,1]
m2[,2]<-200/m1[,2]
m2[,3]<-400/m1[,3]
m2[,4]<-800/(60*m1[,4])
m2[,5]<-1500/(60*m1[,5])
m2[,6]<-3000/(60*m1[,6])
m2[,7]<-42195/(60*m1[,7])
x2<-apply(m2,2,mean)
Sn2<-(n-1)/n*cov(m2)
R2<-cor(m2)
#运行结果：
# x1
#        V2         V3         V4         V5         V6         V7         V8 
# 11.357778  23.118519  51.989074   2.022407   4.189444   9.080741 153.619259 
# Sn1
#           V2         V3         V4          V5         V6          V7
#V2 0.15243951  0.3381800  0.8747905 0.027190535 0.08233765  0.22955165
#V3 0.33818004  0.8471052  2.1522283 0.064940604 0.19900844  0.54408443
#V4 0.87479053  2.1522283  6.6205417 0.178441118 0.49974763  1.40039328
#V5 0.02719053  0.0649406  0.1784411 0.007407167 0.02101800  0.06024266
#V6 0.08233765  0.1990084  0.4997476 0.021018004 0.07280895  0.21215226
#V7 0.22955165  0.5440844  1.4003933 0.060242661 0.21215226  0.65244760
#V8 4.25391502 10.1926730 28.3684771 1.197068450 3.47428477 10.50783018
#           V8
#V2   4.253915
#V3  10.192673
#V4  28.368477
#V5   1.197068
#V6   3.474285
#V7  10.507830
#V8 265.265148
# R1
#          V2        V3        V4        V5        V6        V7        V8
#V2 1.0000000 0.9410886 0.8707802 0.8091758 0.7815510 0.7278784 0.6689597
#V3 0.9410886 1.0000000 0.9088096 0.8198258 0.8013282 0.7318546 0.6799537
#V4 0.8707802 0.9088096 1.0000000 0.8057904 0.7197996 0.6737991 0.6769384
#V5 0.8091758 0.8198258 0.8057904 1.0000000 0.9050509 0.8665732 0.8539900
#V6 0.7815510 0.8013282 0.7197996 0.9050509 1.0000000 0.9733801 0.7905565
#V7 0.7278784 0.7318546 0.6737991 0.8665732 0.9733801 1.0000000 0.7987302
#V8 0.6689597 0.6799537 0.6769384 0.8539900 0.7905565 0.7987302 1.0000000
# x2
#      V2       V3       V4       V5       V6       V7       V8 
#8.814772 8.664408 7.712067 6.604214 5.989687 5.542701 4.620264
# Sn2
#           V2         V3         V4         V5         V6         V7
#V2 0.08886163 0.09383586 0.09488221 0.06385913 0.08069721 0.09043587
#V3 0.09383586 0.11254789 0.11176120 0.07353737 0.09424082 0.10348392
#V4 0.09488221 0.11176120 0.13523721 0.07944200 0.09367553 0.10631059
#V5 0.06385913 0.07353737 0.07944200 0.07216131 0.08485322 0.09790735
#V6 0.08069721 0.09424082 0.09367553 0.08485322 0.12154716 0.14105343
#V7 0.09043587 0.10348392 0.10631059 0.09790735 0.14105343 0.17331425
#V8 0.07959802 0.09158236 0.09999405 0.09255923 0.11626411 0.14384635
#           V8
#V2 0.07959802
#V3 0.09158236
#V4 0.09999405
#V5 0.09255923
#V6 0.11626411
#V7 0.14384635
#V8 0.16362679
# R2
#          V2        V3        V4        V5        V6        V7        V8
#V2 1.0000000 0.9383028 0.8655248 0.7974687 0.7764777 0.7287297 0.6601124
#V3 0.9383028 1.0000000 0.9058875 0.8159945 0.8057456 0.7409469 0.6748635
#V4 0.8655248 0.9058875 1.0000000 0.8041737 0.7306437 0.6944025 0.6722005
#V5 0.7974687 0.8159945 0.8041737 1.0000000 0.9060324 0.8754795 0.8518052
#V6 0.7764777 0.8057456 0.7306437 0.9060324 1.0000000 0.9718385 0.8244153
#V7 0.7287297 0.7409469 0.6944025 0.8754795 0.9718385 1.0000000 0.8541900
#V8 0.6601124 0.6748635 0.6722005 0.8518052 0.8244153 0.8541900 1.0000000
#短跑（100m）与长跑（马拉松）的相关系数只有0.66，说明相关性很低。本题结果相比于17题更能反映不同径赛
#种类间的差别，但两者的相关系数矩阵相近。

#1.27
bank0<-read.table("D:/R-3.3.2/JohnsonWichern Data sets/T1-11.DAT",sep="\t")
m1<-as.matrix(bank0)
plot(m1[,1],m1[,2])
R1<-cor(m1)
m2<-m1[-7,]
R2<-cor(m2)
m3<-m2
m3[,1]<-0.004*m2[,1]
R3<-cor(m3)

#4.28
library(car)
bank0<-read.table("D:/R-3.3.2/JohnsonWichern Data sets/T1-5.DAT")
m<-as.matrix(bank0)
x<-m[,2]
qqnorm(x)
qqline(x)
y<-x[order(x)]
q<-qnorm(seq((1-0.5)/42,(42-0.5)/42,1/42),mean=0,sd=1)
rQ<-cor(y,q)

#4.30
library(car)
library(forecast)
x1<-c(1,2,3,4,5,6,7,8,9,11)
x2<-c(18.95,19.00,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
l1<-powerTransform(x1)$lambda
y1<-BoxCox(x1,l1)
qqnorm(y1)
qqline(y1)
l2<-powerTransform(x2)$lambda
y2<-BoxCox(x2,l2)
qqnorm(y2)
qqline(y2)
m<-cbind(x1,x2)
l3<-powerTransform(x)$lambda

#4.31
library(car)
bank0<-read.table("D:/R-3.3.2/JohnsonWichern Data sets/T1-6.DAT")
m1<-as.matrix(bank0[1:69,-6])
m2<-as.matrix(bank0[70:98,-6])
q1<-qnorm(seq((1-0.5)/69,(69-0.5)/69,1/69),mean=0,sd=1)
q2<-qnorm(seq((1-0.5)/29,(29-0.5)/29,1/29),mean=0,sd=1)
rQ1<-cor(x1,q1)
rQ2<-cor(x2,q1)
rQ3<-cor(x3,q1)
rQ4<-cor(x4,q1)
rQ5<-cor(x5,q1)
rQ6<-cor(y1,q2)
rQ7<-cor(y2,q2)
rQ8<-cor(y3,q2)
rQ9<-cor(y4,q2)
rQ10<-cor(y5,q2)



